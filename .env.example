# Redis connection (optional). When unset, app will use in-memory rate limiter.
# Example: redis://redis:6379 or redis://127.0.0.1:6379
REDIS_URL=redis://127.0.0.1:6379

# Global rate limit defaults
# Number of requests
RATE_LIMIT_POINTS=100
# Window in seconds
RATE_LIMIT_DURATION=60

# Comma-separated list of path prefixes to exempt from rate limiting
# Example: /health,/static,/public
RATE_LIMIT_EXEMPT=/health,/static

# Per-route custom limits (semicolon separated list). Format: path:points/duration
# Example: limit login to 10 requests per minute and registration to 5 per minute
RATE_LIMIT_ROUTES=/api/auth/login:10/60;/api/auth/register:5/60

# How to use user id as limiter key:
# RATE_LIMIT_USER_KEY_STRATEGY can be one of:
# - auth-only (default): use user:<id>:<role> when request has valid auth, otherwise ip:<addr>
# - always: try to use user key even if req.user not set (will attempt to decode token)
# - never: always use ip-based keys
# Example:
RATE_LIMIT_USER_KEY_STRATEGY=auth-only

# Role-based quotas (optional). Semicolon separated entries. Format: role:points/duration or role:unlimited
# Example: free:50/60;pro:1000/60;admin:unlimited
RATE_LIMIT_ROLE_QUOTAS=free:50/60;pro:1000/60;admin:unlimited

# Other envs used by project (examples)
PORT=5000
MONGO_URI=
JWT_SECRET=

